"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MixTraceApi = void 0;
const BaseApi_1 = require("../BaseApi");
const config_1 = require("../config");
class MixTraceApi extends BaseApi_1.BaseApi {
    closeTrackOrder(closeTrackOrderReq) {
        const url = config_1.MIX_URL.MIX_TRACE + '/closeTrackOrder';
        const headers = this.signer('POST', url, closeTrackOrderReq);
        return this.axiosInstance.post(url, closeTrackOrderReq, { headers });
    }
    currentTrack(symbol, productType, pageSize, pageNo) {
        const url = config_1.MIX_URL.MIX_TRACE + '/currentTrack';
        const qsOrBody = { symbol, productType, pageSize, pageNo };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
    historyTrack(startTime, endTime, pageSize, pageNo) {
        const url = config_1.MIX_URL.MIX_TRACE + '/historyTrack';
        const qsOrBody = { startTime, endTime, pageSize, pageNo };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
    summary() {
        const url = config_1.MIX_URL.MIX_TRACE + '/summary';
        const headers = this.signer('GET', url, null);
        return this.axiosInstance.get(url, { headers });
    }
    profitSettleTokenIdGroup() {
        const url = config_1.MIX_URL.MIX_TRACE + '/profitSettleTokenIdGroup';
        const headers = this.signer('GET', url, null);
        return this.axiosInstance.get(url, { headers });
    }
    profitDateGroupList(pageSize, pageNo) {
        const url = config_1.MIX_URL.MIX_TRACE + '/profitSettleTokenIdGroup';
        const qsOrBody = { pageSize, pageNo };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
    profitDateList(marginCoin, date, pageSize, pageNo) {
        const url = config_1.MIX_URL.MIX_TRACE + '/profitDateList';
        const qsOrBody = { marginCoin, date, pageSize, pageNo };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
    waitProfitDateList(pageSize, pageNo) {
        const url = config_1.MIX_URL.MIX_TRACE + '/waitProfitDateList';
        const qsOrBody = { pageSize, pageNo };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
}
exports.MixTraceApi = MixTraceApi;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWl4VHJhY2VBcGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL21peC9NaXhUcmFjZUFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx3Q0FBbUM7QUFFbkMsc0NBQWtDO0FBRWxDLE1BQWEsV0FBWSxTQUFRLGlCQUFPO0lBQ3BDLGVBQWUsQ0FBQyxrQkFBc0M7UUFDbEQsTUFBTSxHQUFHLEdBQUcsZ0JBQU8sQ0FBQyxTQUFTLEdBQUcsa0JBQWtCLENBQUM7UUFDbkQsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLGtCQUFrQixDQUFDLENBQUE7UUFDNUQsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsa0JBQWtCLEVBQUUsRUFBQyxPQUFPLEVBQUMsQ0FBQyxDQUFBO0lBQ3RFLENBQUM7SUFFRCxZQUFZLENBQUMsTUFBYyxFQUFDLFdBQWtCLEVBQUMsUUFBZSxFQUFDLE1BQWE7UUFDeEUsTUFBTSxHQUFHLEdBQUcsZ0JBQU8sQ0FBQyxTQUFTLEdBQUcsZUFBZSxDQUFDO1FBQ2hELE1BQU0sUUFBUSxHQUFHLEVBQUMsTUFBTSxFQUFDLFdBQVcsRUFBQyxRQUFRLEVBQUMsTUFBTSxFQUFDLENBQUM7UUFDdEQsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFBO1FBQ2pELE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEVBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUMsQ0FBQyxDQUFBO0lBQ25FLENBQUM7SUFFRCxZQUFZLENBQUMsU0FBaUIsRUFBQyxPQUFjLEVBQUMsUUFBZSxFQUFDLE1BQWE7UUFDdkUsTUFBTSxHQUFHLEdBQUcsZ0JBQU8sQ0FBQyxTQUFTLEdBQUcsZUFBZSxDQUFDO1FBQ2hELE1BQU0sUUFBUSxHQUFHLEVBQUMsU0FBUyxFQUFDLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxFQUFDLENBQUM7UUFDckQsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFBO1FBQ2pELE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEVBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUMsQ0FBQyxDQUFBO0lBQ25FLENBQUM7SUFFRCxPQUFPO1FBQ0gsTUFBTSxHQUFHLEdBQUcsZ0JBQU8sQ0FBQyxTQUFTLEdBQUcsVUFBVSxDQUFDO1FBQzNDLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQTtRQUM3QyxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxFQUFDLE9BQU8sRUFBQyxDQUFDLENBQUE7SUFDakQsQ0FBQztJQUVELHdCQUF3QjtRQUNwQixNQUFNLEdBQUcsR0FBRyxnQkFBTyxDQUFDLFNBQVMsR0FBRywyQkFBMkIsQ0FBQztRQUM1RCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUE7UUFDN0MsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsRUFBQyxPQUFPLEVBQUMsQ0FBQyxDQUFBO0lBQ2pELENBQUM7SUFFRCxtQkFBbUIsQ0FBQyxRQUFlLEVBQUMsTUFBYTtRQUM3QyxNQUFNLEdBQUcsR0FBRyxnQkFBTyxDQUFDLFNBQVMsR0FBRywyQkFBMkIsQ0FBQztRQUM1RCxNQUFNLFFBQVEsR0FBRyxFQUFDLFFBQVEsRUFBQyxNQUFNLEVBQUMsQ0FBQztRQUNuQyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsUUFBUSxDQUFDLENBQUE7UUFDakQsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsRUFBQyxPQUFPLEVBQUMsTUFBTSxFQUFFLFFBQVEsRUFBQyxDQUFDLENBQUE7SUFDbEUsQ0FBQztJQUVELGNBQWMsQ0FBQyxVQUFpQixFQUFDLElBQVcsRUFBQyxRQUFlLEVBQUMsTUFBYTtRQUN0RSxNQUFNLEdBQUcsR0FBRyxnQkFBTyxDQUFDLFNBQVMsR0FBRyxpQkFBaUIsQ0FBQztRQUNsRCxNQUFNLFFBQVEsR0FBRyxFQUFDLFVBQVUsRUFBQyxJQUFJLEVBQUMsUUFBUSxFQUFDLE1BQU0sRUFBQyxDQUFDO1FBQ25ELE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQTtRQUNqRCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxFQUFDLE9BQU8sRUFBQyxNQUFNLEVBQUUsUUFBUSxFQUFDLENBQUMsQ0FBQTtJQUNsRSxDQUFDO0lBRUQsa0JBQWtCLENBQUMsUUFBZSxFQUFDLE1BQWE7UUFDNUMsTUFBTSxHQUFHLEdBQUcsZ0JBQU8sQ0FBQyxTQUFTLEdBQUcscUJBQXFCLENBQUM7UUFDdEQsTUFBTSxRQUFRLEdBQUcsRUFBQyxRQUFRLEVBQUMsTUFBTSxFQUFDLENBQUM7UUFDbkMsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFBO1FBQ2pELE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEVBQUMsT0FBTyxFQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUMsQ0FBQyxDQUFBO0lBQ2xFLENBQUM7Q0FDSjtBQXJERCxrQ0FxREMifQ==