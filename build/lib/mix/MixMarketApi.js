"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MixMarketApi = void 0;
const BaseApi_1 = require("../BaseApi");
const config_1 = require("../config");
class MixMarketApi extends BaseApi_1.BaseApi {
    contracts(productType) {
        const url = config_1.MIX_URL.MIX_MARKET + '/contracts';
        const qsOrBody = { productType };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
    depth(symbol, limit) {
        const url = config_1.MIX_URL.MIX_MARKET + '/depth';
        const qsOrBody = { symbol, limit };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
    ticker(symbol) {
        const url = config_1.MIX_URL.MIX_MARKET + '/ticker';
        const qsOrBody = { symbol };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
    tickers(productType) {
        const url = config_1.MIX_URL.MIX_MARKET + '/tickers';
        const qsOrBody = { productType };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
    fills(symbol, limit) {
        const url = config_1.MIX_URL.MIX_MARKET + '/fills';
        const qsOrBody = { symbol, limit };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
    candles(symbol, granularity, startTime, endTime) {
        const url = config_1.MIX_URL.MIX_MARKET + '/candles';
        const qsOrBody = { symbol, granularity, startTime, endTime };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
    index(symbol) {
        const url = config_1.MIX_URL.MIX_MARKET + '/index';
        const qsOrBody = { symbol };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
    fundingTime(symbol) {
        const url = config_1.MIX_URL.MIX_MARKET + '/funding-time';
        const qsOrBody = { symbol };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
    historyFundRate(symbol, pageSize, pageNo, nextPage) {
        const url = config_1.MIX_URL.MIX_MARKET + '/history-fundRate';
        const qsOrBody = { symbol, pageSize, pageNo, nextPage };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
    currentFundRate(symbol) {
        const url = config_1.MIX_URL.MIX_MARKET + '/current-fundRate';
        const qsOrBody = { symbol };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
    openInterest(symbol) {
        const url = config_1.MIX_URL.MIX_MARKET + '/open-interest';
        const qsOrBody = { symbol };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
    markPrice(symbol) {
        const url = config_1.MIX_URL.MIX_MARKET + '/mark-price';
        const qsOrBody = { symbol };
        const headers = this.signer('GET', url, qsOrBody);
        return this.axiosInstance.get(url, { headers, params: qsOrBody });
    }
}
exports.MixMarketApi = MixMarketApi;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWl4TWFya2V0QXBpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYi9taXgvTWl4TWFya2V0QXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHdDQUFtQztBQUNuQyxzQ0FBa0M7QUFFbEMsTUFBYSxZQUFhLFNBQVEsaUJBQU87SUFFckMsU0FBUyxDQUFDLFdBQW1CO1FBQ3pCLE1BQU0sR0FBRyxHQUFHLGdCQUFPLENBQUMsVUFBVSxHQUFHLFlBQVksQ0FBQztRQUM5QyxNQUFNLFFBQVEsR0FBRyxFQUFDLFdBQVcsRUFBQyxDQUFDO1FBQy9CLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQTtRQUNqRCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxFQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFDLENBQUMsQ0FBQTtJQUNuRSxDQUFDO0lBRUQsS0FBSyxDQUFDLE1BQWMsRUFBRSxLQUFhO1FBQy9CLE1BQU0sR0FBRyxHQUFHLGdCQUFPLENBQUMsVUFBVSxHQUFHLFFBQVEsQ0FBQztRQUMxQyxNQUFNLFFBQVEsR0FBRyxFQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUMsQ0FBQztRQUNqQyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsUUFBUSxDQUFDLENBQUE7UUFDakQsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsRUFBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBQyxDQUFDLENBQUE7SUFDbkUsQ0FBQztJQUVELE1BQU0sQ0FBQyxNQUFjO1FBQ2pCLE1BQU0sR0FBRyxHQUFHLGdCQUFPLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztRQUMzQyxNQUFNLFFBQVEsR0FBRyxFQUFDLE1BQU0s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